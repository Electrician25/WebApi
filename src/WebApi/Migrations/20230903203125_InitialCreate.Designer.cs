// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi.Data;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230903203125_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Entities.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BlogId"));

                    b.Property<string>("BlogAuthor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BlogName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BlogTopic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            BlogId = 1,
                            BlogAuthor = "Viktor Dresson",
                            BlogName = "Traveling",
                            BlogTopic = "Bermuda Triangle"
                        },
                        new
                        {
                            BlogId = 2,
                            BlogAuthor = "Willson Wolles",
                            BlogName = "Underwater",
                            BlogTopic = "Studying the bottom of the Mariana Trench"
                        },
                        new
                        {
                            BlogId = 3,
                            BlogAuthor = "Bill Wolles",
                            BlogName = "Space travalling",
                            BlogTopic = "Exploring the dark side of the moon"
                        },
                        new
                        {
                            BlogId = 4,
                            BlogAuthor = "Alex Binner",
                            BlogName = ".NET 7 VERSION",
                            BlogTopic = "New .net 7 version"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Post", b =>
                {
                    b.Property<int?>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("PostId"));

                    b.Property<int>("BlogId")
                        .HasColumnType("integer");

                    b.Property<int>("BlogsId")
                        .HasColumnType("integer");

                    b.Property<string>("PostDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("WebApi.Entities.Post", b =>
                {
                    b.HasOne("WebApi.Entities.Blog", "Blog")
                        .WithMany("Post")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("WebApi.Entities.Blog", b =>
                {
                    b.Navigation("Post");
                });
#pragma warning restore 612, 618
        }
    }
}
